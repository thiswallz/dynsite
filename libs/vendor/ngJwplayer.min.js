/* global jwplayer */
/**
 * Created by David Karchmer on 9/11/15.
 */
! function() {
    "use strict";
    angular.module("ng-jwplayer", []).constant("jwplayer", jwplayer)
}(),
function() {
    "use strict";

    function e(e) {
        this.myPlayer = {}, this.existJWPlayer = function(e) {
            return angular.isDefined(this.myPlayer) && angular.isDefined(this.myPlayer[e]) && null !== this.myPlayer[e]
        }, this.initJWPlayer = function(n) {
            return this.cleanUp(n), this.myPlayer[n] = e(n), this.myPlayer[n]
        }, this.cleanUp = function(e) {
            this.existJWPlayer(e) && (this.myPlayer[e].remove(), this.myPlayer[e] = null)
        }
    }
    angular.module("ng-jwplayer").service("jwplayerService", e), e.$inject = ["jwplayer"]
}(),
function() {
    "use strict";

    function e(e, n, r, i) {
        var a, t = function(n, t) {
            var l = n.playerId || "myPlayer1",
                y = function(e) {
                    return '<div id="' + e + '"></div>'
                };
            t.html(y(l)), e(t.contents())(n), a = i.initJWPlayer(l), a.setup(n.playerOptions), a.on("ready", function() {
                r.$broadcast("ng-jwplayer-ready", {
                    playerId: l
                })
            })
        };
        return {
            restrict: "EC",
            scope: {
                playerId: "@",
                playerOptions: "="
            },
            link: function(e, r, a) {
                var l = e.playerId || "myPlayer1";
                e.$on("$destroy", function() {
                    n.debug("jwplayer onDestroy: " + l), i.cleanUp(l)
                }), e.$watch(function() {
                    return a.ngSrc
                }, function(i) {
                    n.debug("ng-src(" + l + ") has changed: " + i), angular.isDefined(e.playerOptions) && (e.playerOptions.file = i, t(e, r))
                }), angular.isDefined(a.ngSrc) && angular.isDefined(e.playerOptions) && (e.playerOptions.file = a.ngSrc, t(e, r))
            }
        }
    }
    angular.module("ng-jwplayer").directive("jwplayer", e), e.$inject = ["$compile", "$log", "$rootScope", "jwplayerService"]
}();