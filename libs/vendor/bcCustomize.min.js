/*
 * BcCustomize V 20170509
 */
window.edit_extension = [];
window.eGBLprocess = {
    getValue: function(refElement, k, ex){
        console.log("ex:",refElement, k, ex)
        var v = $(refElement).css(k);
        if(ex && ex!=""){
            v =  v.replace(ex, "") 
        }
        return v;
    },
    genId: function(k, c){
        return k.replace("-", "")+"id"+c;
    },
    addInput: function(v){
         window.edit_extension.push(v);
    }
};

document.write('<script type="text/javascript" src="'+  "./template/" + dataSite.template_folder + '/config/properties.jslib.extension.js'  +'">');
document.write('<\/script>');
console.log("window: ", window.edit_extension)
jQuery.fn.bcCustomize = function() {
    return this.each(function() {
        $(this).addClass('customizable');

        var randomId = getRandomId();
        var customCssHandler = $(this).data('bccustom-handler-css');
        customCssHandler=(undefined!=customCssHandler) ? customCssHandler : '';


        $(this).prepend('<a class="editHandler" id="' + randomId + '" style="'+customCssHandler+'"><img src="assets/img/editable.svg"></a>');

        var refElement = $(this);

        $('#' + randomId).click(function(e) {
            e.stopPropagation();
            e.preventDefault();

            //Remove if exist other boxes
            if ($('.bcCustomize').length) {
                $('.bcCustomize').remove();
            }

            if (!$('.bcCustomize').length) {

                var customId = getRandomId();
                $(refElement).attr('customid', customId);

                //get current attributes
                var topPosition = $(this).offset().top + 18;
                var leftPosition = ($(this).offset().left) - $('body').offset().left;
                var currentBgImage = $(refElement).css('background-image');
                currentBgImage = (currentBgImage == 'none') ? '' : currentBgImage;
                var currentBgColor = rgb2hex($(refElement).css('background-color'));
                var currentColor = rgb2hex($(refElement).css('color'));

                

                var currentWidth = $(refElement).css('width');
                var currentHeight = $(refElement).css('height');
                if (currentWidth == currentHeight) {
                    var squareLayout = 'checked';
                    var rectangleLayout = '';
                } else {
                    var squareLayout = '';
                    var rectangleLayout = 'checked';
                }
                var currentBgRepeat = $(refElement).css('background-repeat');
                if (currentBgRepeat == 'repeat') {
                    var bgRepeat = 'checked';
                    var bgNoRepeat = '';
                } else {
                    var bgRepeat = '';
                    var bgNoRepeat = 'checked';
                }

                if ('none' != currentBgImage) {
                    var trimBegin = currentBgImage.indexOf('http');
                    var trimEnd = currentBgImage.indexOf(')');
                    currentBgImage = currentBgImage.substring(trimBegin, trimEnd);
                }

                //Determine if box is at bottom of page
                strClassForCaret = '';
                var currentBottom = Math.round($(refElement).offset().top + $(refElement).height());

                if (currentBottom == $(document).height() && $(document).height() != $(refElement).height()) {
                    topPosition -= $(refElement).height();
                    topPosition -= 330;
                    strClassForCaret = 'bottom';
                }

                var strContent = '<a class="close" onclick="javascript:closeCustomizer(this)">✕</a>';
                strContent += '<p id="bc_handler">Editor de estilos de plantilla</p><hr>';

                var customAttributes = $(refElement).data('bccustom-attrs');
                var maxSizeInfo = $(refElement).data('bccustom-max-size-info');
                var arrProperties = customAttributes.split(" ");

                //Wanings/info
                if (jQuery.inArray("bgurl", arrProperties) != -1) {
                    strContent += '<div class="alert alert-warning" role="alert"><strong>Atención:</strong> Por temas de rendimiento, se recomienda una resolución <strong>' + maxSizeInfo + '</strong> de alto/ancho para la imagen que cargue o vincule</div>';
                }

                if (jQuery.inArray("bgurl", arrProperties) != -1) {
                    strContent += '<label for="bc_bg_image">Url imagen remota</label>';
                    strContent += '<input type="text" id="bc_bg_image" class="form-control urlBg" placeholder="Url imagen" value="' + currentBgImage + '" onfocus="this.select();" onmouseup="return false;"><a class="setButtons ok" href="javascript:bcApplyBgImage(\'' + customId + '\')">✔</a><a class="setButtons" href="javascript:bcResetBgImage(\'' + customId + '\')">︎✕</a>';
                    strContent += '<label for="bc_bg_upload">Cargar imagen<span class="pull-right">(max. 400kb)&nbsp;&nbsp;</span></label>';
                    strContent += '<div class="inputBtnSection"><input type="text" id="uploadFile" class="form-control disableInputField" placeholder="Seleccionar/Subir archivo" disabled="disabled" /><label class="fileUpload"><input id="uploadBtn" type="file" class="upload" accept="image/*" onchange="javascript:document.getElementById(\'uploadFile\').value = getFileName(this.value); bcApplyBgLocalImage(this.files[0],\'' + customId + '\',this);"/><span class="uploadBtn">Seleccionar</span></label></div>';

                    if (jQuery.inArray("logoLayout", arrProperties) == -1 && jQuery.inArray("noAdjust", arrProperties) == -1) {
                        strContent += '<div class="bgRepeatRadios"><input type="radio" name="bgRepeatRadios" value="repeat" ' + bgRepeat + ' onclick="javascript:bcApplyRepeatBg(\'' + customId + '\');"> Repetir patr&oacute;n &nbsp; <input type="radio" name="bgRepeatRadios" value="norepeat" ' + bgNoRepeat + ' onclick="javascript:bcApplyRepeatBg(\'' + customId + '\');"> Ajustar</div><hr>';
                    }
                }

                if (jQuery.inArray("logoLayout", arrProperties) != -1) {
                    strContent += '<label for="bcRadios">Layout logotipo</label>';
                    strContent += '<div class="bcRadios"><input type="radio" name="logoLayout" value="square" ' + squareLayout + ' onclick="javascript:bcApplyLogoLayout(\'' + customId + '\');"> Cuadrado &nbsp; <input type="radio" name="logoLayout" value="rectangle" ' + rectangleLayout + ' onclick="javascript:bcApplyLogoLayout(\'' + customId + '\');"> Rectangular</div><hr>';
                }

                if (jQuery.inArray("bgcolor", arrProperties) != -1) {
                    strContent += '<label for="bc_bgcolor_text">Color de fondo</label>';
                    strContent += '<input type="text" id="bc_bgcolor_text" class="form-control color" placeholder="#FFFFFF" value="' + currentBgColor + '" onchange="javascript:bcApplyBgColor(1,\'' + customId + '\')">';

                    if (Modernizr.inputtypes.color) {
                        strContent += '<input type="color" id="bc_bgcolor_picker" class="form-control pickercolor" value="' + currentBgColor + '" onchange="javascript:bcApplyBgColor(2,\'' + customId + '\')">';
                    }
                }

                if (jQuery.inArray("color", arrProperties) != -1) {
                    strContent += '<label for="bc_color_text">Color del texto</label>';
                    strContent += '<input type="text" id="bc_color_text" class="form-control color" placeholder="#FFFFFF" value="' + currentColor + '" onchange="javascript:bcApplyColor(1,\'' + customId + '\')">';
                    if (Modernizr.inputtypes.color) {
                        strContent += '<input type="color" id="bc_color_picker" class="form-control pickercolor" value="' + currentColor + '" onchange="javascript:bcApplyColor(2,\'' + customId + '\')">';
                    }
                }

               if (jQuery.inArray("extras", arrProperties) != -1) {
                    
                    //Recorrer solo los extras del elemento ID o seleccionado
                    var subject = $('*[customid="' + customId + '"]');
                    

                    var cmps = configSite.GBL_PROPERTIES.edit_sections;
                    for(var i=0; i<cmps.length; i++){
                        var obj = cmps[i];
                        var id;
                        if(obj.cmp=='class'){
                            id = subject.attr('class');
                        }else{
                            id = subject.attr('id');
                        }
                        if(id==obj.val){

                            for(var j=0; j<obj.extras.length; j++){
                                var extobj = obj.extras[j];

                                if(extobj.tvalue=="text"){
                                    var cValDyn = rgb2hex($(refElement).css(extobj.klass));

                                    if(extobj.extension && extobj.extension!=""){
                                       cValDyn =  cValDyn.replace(extobj.extension, "") 
                                    }
                                    var idcminterno = extobj.klass.replace("-", "")+"id"+customId;

                                    strContent += '<label >'+extobj.description+'</label>';
                                    strContent += '<input type="text" style="float:left;float: left;width: 50%;" id="'+idcminterno+'" value="' + cValDyn + '" class="form-control" placeholder="..."  onkeyup="javascript:bcApplyExtra(\''+idcminterno+'\',\'' + customId + '\', \''+extobj.klass+'\', \''+extobj.extension+'\')"><span style="    padding-top: 14px;padding-left: 5px; ">'+extobj.msg+'</span><br style="clear: both;">';
                            
                                }
                                else if(extobj.tvalue=="combo"){
                                    var cValDyn = rgb2hex($(refElement).css(extobj.klass));

                                    if(extobj.extension && extobj.extension!=""){
                                       cValDyn =  cValDyn.replace(extobj.extension, "") 
                                    }
                                    var idcminterno = extobj.klass.replace("-", "")+"id"+customId;

                                    strContent += '<label >'+extobj.description+'</label>';
                                    strContent +='<select  class="form-control" style="float:left;float: left;width: 50%;" id="'+idcminterno+'" onchange="javascript:bcApplyExtra(\''+idcminterno+'\',\'' + customId + '\', \''+extobj.klass+'\', \''+extobj.extension+'\')">';
                                    for(var k=0; k<extobj.options.length; k++){
                                        var extroptobj = extobj.options[k];
                                        var sel = cValDyn==extroptobj.value?'selected': '';
                                        strContent +='<option '+sel+' value="'+extroptobj.value+'" >'+extroptobj.name+'</option>';
                                    }
                                    strContent +='</select >';
                                    strContent += ' <span style="    padding-top: 14px;padding-left: 5px; ">'+extobj.msg+'</span><br style="clear: both;">';
                            
                                }else{
                                    
                                    if(window.edit_extension && window.edit_extension.length>0){
                                        for(var k=0; k<window.edit_extension.length; k++){
                                            var globalextend = window.edit_extension[k];
                                            console.log("globalextend: ",globalextend)
                                            console.log("v: ",globalextend.keytext,extobj.tvalue)
                                            if(globalextend.keytext==extobj.tvalue){
                                                
                                                strContent += globalextend.process(extobj, refElement, customId);
                                            }

                                        }
                                    }



                                }


                            }
                        }     
                    }

                  


                }
                //TODO Extender

                $('body').prepend('<div class="bcCustomize ' + strClassForCaret + '" style="top:' + topPosition + 'px; left:' + leftPosition + 'px;">' + strContent + '</div>');

                //drag and drop
                var bc_handler = document.getElementById("bc_handler");
                var bc_box = document.getElementsByClassName("bcCustomize")[0];
                Drag.init(bc_handler, bc_box);
            }
        });
    });
};


jQuery.fn.bcManageContent = function() {
    return this.each(function() {
        $(this).addClass('customizable');

        var randomId = getRandomId();
        var defaultCssHandler=(undefined!=$(this).data('bccustom-attrs')) ? 'margin-left: 50px;' : '';

        var customCssHandler = $(this).data('bccustom-handler-css');
        customCssHandler=(undefined!=customCssHandler) ? defaultCssHandler+customCssHandler : defaultCssHandler;

        $(this).prepend('<a class="editHandler managedContent" id="' + randomId + '" style="'+customCssHandler+'"><img src="assets/img/managed_plus.svg"></a>');
        var refElement = $(this);

        $('#' + randomId).click(function(e) {
            e.stopPropagation();
            e.preventDefault();
            var handler=$(this);

            if (!$('.bcCustomize').length) {
                revealTab($(refElement).data('manage-from-tabs'));
                $('.editHandler.managedContent').html('<img src="assets/img/managed_plus.svg">');
                handler.html('<img src="assets/img/managed_minus.svg">');
            }
        });
    });
};

function generateAttrs(){
    var cmps = configSite.GBL_PROPERTIES.edit_sections;
    for(var i=0; i<cmps.length; i++){
        var obj = cmps[i];
        var opts = null;
        if(obj.options){
            for(var j=0; j<obj.options.length; j++){
                opts+=" " + obj.options[j];
            }
        }
        console.log(obj.cmp)
        if(obj.cmp=='class'){
            console.log("."+obj.val+"")
            $("."+obj.val+"")
            .attr('data-bccustom-attrs', opts)
            .attr("data-bccustom-max-size-info", obj.msg)
            .attr("data-manage-from-tabs", obj.manager)
            .attr("data-bccustom-handler-css", obj.handlercss);
        }else{
            $("["+obj.cmp+"='"+obj.val+"']")
            .attr('data-bccustom-attrs', opts)
            .attr("data-bccustom-max-size-info", obj.msg)
            .attr("data-manage-from-tabs", obj.manager)
            .attr("data-bccustom-handler-css", obj.handlercss);
        }
    }
}

var s3Configdata = { 'bucket': configSite.bucketS3assets, 'folder': 'images/gallery/', 'endpoint_buckets3_out': configSite.assetspath };

//show handlers
setTimeout(function() {
    if(_token!=''){
        generateAttrs()

    	//add handlers for customize and content management
    	$("[data-bccustom-attrs]").bcCustomize();
        $("[data-manage-from-tabs]").bcManageContent();

        

    }
}, 2000);


function getFileName(strPath) {
    var strPrefix = "C:\\fakepath\\";
    if (strPath.indexOf(strPrefix) != -1) {
        return strPath.substring(strPath.indexOf(strPrefix) + strPath.indexOf(strPrefix) + strPrefix.length, strPath.length);
    } else {
        return strPath;
    }
}



function bcApplyLogoLayout(customId) {
    var subject = $('*[customid="' + customId + '"]');
    var layout = $('input[name=logoLayout]:checked').val();
    var height = $(subject).height();
    if (layout == 'square') {
        $(subject).css('width', height + 'px');
    } else {
        $(subject).css('width', (height * 2) + 'px');
    }
    $('.saver').addClass('show');
}

function bcApplyBgImage(customId) {
    var subject = $('*[customid="' + customId + '"]');
    var strUrlBg = $('#bc_bg_image').val();
    $(subject).css('background-image', 'url(' + strUrlBg + ')');

    //Si habia seteado imagen local, elimina elemento clonado
    var strIdForBgImageLocal = 'bgImageLocal_' + $(subject).attr('id');
    console.log("eliminando:", strIdForBgImageLocal);
    if ($('#' + strIdForBgImageLocal).length) {
        $('#' + strIdForBgImageLocal).remove();
    }
    $('.saver').addClass('show');
}

function bcResetBgImage(customId) {
    $('#bc_bg_image').val('');
    var subject = $('*[customid="' + customId + '"]');
    $(subject).css('background-image', 'none');
    $('.saver').addClass('show');
}


function bcApplyRepeatBg(customId) {
    var subject = $('*[customid="' + customId + '"]');
    var bgRepeat = $('input[name=bgRepeatRadios]:checked').val();

    if (bgRepeat == 'repeat') {
        $(subject).css({ "background-repeat": "repeat", "background-position": "0% 0%", "background-size": "auto" });
    } else {
        $(subject).css({ "background-repeat": "no-repeat", "background-position": "center center", "background-size": "cover" });
    }
    $('.saver').addClass('show');
}

function bcApplyExtra(idc, customId, klass, ext) {
    var subject = $('*[customid="' + customId + '"]');
    $(subject).css(klass, $('#'+idc).val()+ext);
    $('.saver').addClass('show');
}


function bcApplyColor(fromTo, customId) {
    if (fromTo == 1) {
        $('#bc_color_picker').val($('#bc_color_text').val());
    } else {
        $('#bc_color_text').val($('#bc_color_picker').val());
    }

    var subject = $('*[customid="' + customId + '"]');
    $(subject).css('color', $('#bc_color_text').val());
    $('.saver').addClass('show');
}

function bcApplyBgColor(fromTo, customId) { 
    if (fromTo == 1) {
        $('#bc_bgcolor_picker').val($('#bc_bgcolor_text').val());
    } else {
        $('#bc_bgcolor_text').val($('#bc_bgcolor_picker').val());
    }

    var subject = $('*[customid="' + customId + '"]');
    $(subject).css('background-color', $('#bc_bgcolor_text').val());
    $('.saver').addClass('show');
}


function bcApplyBgColorPlayer(fromTo, customId) {
    if (fromTo == 1) {
        $('#bc_bgcolor_picker_Player').val($('#bc_bgcolor_text_Player').val());
    } else {
        $('#bc_bgcolor_text_Player').val($('#bc_bgcolor_picker_Player').val());
    }

    var subject = $(customId);
    $(subject).css('background-color', $('#bc_bgcolor_text_Player').val());

    //Assets del player
    $('.jw-buffer').css('background-color', shadeColor($('#bc_bgcolor_text_Player').val(), -9));
    $('.jw-rail').css('background-color', shadeColor($('#bc_bgcolor_text_Player').val(), -18));
    $('.saver').addClass('show');
}


function bcApplyColorPlayer(fromTo, customId) {
    if (fromTo == 1) {
        $('#bc_color_pickerPlayer').val($('#bc_color_text_Player').val());
    } else {
        $('#bc_color_text_Player').val($('#bc_color_pickerPlayer').val());
    }

    var subject = $(customId);
    $(subject).css('color', $('#bc_color_text_Player').val());


    //Assets del player
    $('.jw-text').css('color', $('#bc_color_text_Player').val());
    $('.jw-progress').css('background-color', $('#bc_color_text_Player').val());
    $('.saver').addClass('show');
}



//check if browser supports file api and filereader features
if (window.File && window.FileReader && window.FileList && window.Blob) {
    function bcApplyBgLocalImage(file, customId, fileElement) {
        var reader = new FileReader();
        reader.onload = function(event) {


            if(file.size>409600){ //validate file weight under 400kb max
                alert('Tamano de imagen ('+humanFileSize(file.size)+') sobrepasa el máximo permitido de 400 KB.');
                document.getElementById("uploadFile").value = "";
                file=null;
            }

            if (file!=null){
                the_url = event.target.result;
                var subject = $('*[customid="' + customId + '"]');
                $(subject).css('background-image', 'url(' + the_url + ')');
                //var futureUrl = 'http://s3.amazonaws.com/' + s3Configdata.bucket + '/' + s3Configdata.folder + configSite.id_usuario + '_' + configSite.id_sitio + '_' + file.name;
                var futureUrl = s3Configdata.endpoint_buckets3_out + '/' + s3Configdata.folder + configSite.id_usuario + '_' + configSite.id_sitio + '_' + file.name;
                $(subject).attr('future-url', futureUrl);

                //clonando objeto para posterior subida
                //Si ya existe objecto lo elimina
                var strIdForBgImageLocal = 'bgImageLocal_' + $(subject).attr('id');
                if ($('#' + strIdForBgImageLocal).length) {
                    $('#' + strIdForBgImageLocal).remove();
                }

                var clonedObject = $(fileElement).clone(true, true);
                $(fileElement).attr('data-bccustom-upload', 'yes');
                $(fileElement).removeAttr('onchange');
                $(fileElement).attr('id', strIdForBgImageLocal);
                $(fileElement).appendTo('#bcTmpFileContainer');
                $(clonedObject).appendTo('label.fileUpload');
            }
        };

        reader.readAsDataURL(file);
        $('.saver').addClass('show');
    }

} else {
    alert('The File APIs are not fully supported in this browser.');
}


function closeCustomizer(obj) {
    $(obj).closest('.bcCustomize').remove();
}

function getRandomId() {
    return Math.random().toString(36).substring(7);
}


function toggleWizard() {
    $('.wizard').toggleClass('hideBar');

    setTimeout(function() {
        $('#triggerWizardBar').html($('#triggerWizardBar').text() == 'OCULTAR' ? 'MOSTRAR' : 'OCULTAR');
        $('#triggerWizardBar').toggleClass('stripDown');
    }, 2000);
}


function rgb2hex(rgb) {
    if (rgb.indexOf('rgba') != -1) {
        return rgb;
    }

    if (rgb.indexOf('rgb') == -1) {
        return rgb;
    }

    if (/^#[0-9A-F]{6}$/i.test(rgb)) return rgb;

    rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);

    function hex(x) {
        return ("0" + parseInt(x).toString(16)).slice(-2);
    }
    return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
}


function resetAllStyles() {
    if (confirm('¿Está seguro de anular los cambios realizados a la plantilla?')) {
        $("[data-bccustom-attrs]").each(function(index) {
            $(this).attr({ style: "" });
        });
        $('#bcTmpFileContainer').html('');
        $('.saver').removeClass('show');
    }
}


function previousActions() {
    var strAnimationLoading = '<svg width="15px" height="15px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="uil-ring"><rect x="0" y="0" width="100" height="100" fill="none" class="bk"></rect><circle cx="50" cy="50" r="40" stroke-dasharray="163.36281798666926 87.9645943005142" stroke="#ffffff" fill="none" stroke-width="20" transform="rotate(78 50 50)"><animateTransform attributeName="transform" type="rotate" values="0 50 50;180 50 50;360 50 50;" keyTimes="0;0.5;1" dur="1s" repeatCount="indefinite" begin="0s"></animateTransform></circle></svg>';
    //$('#saveStyles').html(strAnimationLoading);
}

function saveCustomization() {
    previousActions();

    //S3 Upload
    $.getScript("https://sdk.amazonaws.com/js/aws-sdk-2.2.27.min.js", function(data, textStatus, jqxhr) {
        AWS.config.credentials = new AWS.CognitoIdentityCredentials({ IdentityPoolId: 'us-east-1:2634e52c-eb81-42f8-b319-e4107e606d7a', });
        AWS.config.region = 'us-east-1';

        //Configura bucket
        var bucket = new AWS.S3({ params: { Bucket: s3Configdata.bucket, ACL: "public-read" } });


        var nUploads = $('[data-bccustom-upload]').size();
        console.log('largo:', nUploads);


        if (nUploads > 0) {
            var contUploads = 0;
            $('[data-bccustom-upload]').each(function(index) {
                var elemId = $(this).attr('id');

                var fileChooser = document.getElementById(elemId);
                var file = fileChooser.files[0];
                if (file) {
                    strKeyName = s3Configdata.folder + configSite.id_usuario + '_' + configSite.id_sitio + '_' + file.name;
                    var params = { Key: strKeyName, ContentType: file.type, Body: file };
                    bucket.upload(params, function(err, data) {
                        var upResults = err ? 'ERROR!' : 'UPLOADED.';

                        contUploads++;
                        console.log(upResults);
                        if (nUploads == contUploads) {
                            //Callback fin subidas
                            finalActions();
                        }

                    });
                } else {
                    console.log('Nothing to upload.');
                }
            });
        } else {
            finalActions();
        }
    });
}

function finalActions() {
    //Reemplaza todos las imagenes subibas con url definitiva
    $('[future-url]').each(function(index) {
        $(this).css('background-image', 'url(' + $(this).attr('future-url') + ')');
        $(this).removeAttr('future-url');
    });

    //All custom CSS
    var strCustomCss = '';
    $('[data-bccustom-attrs]').each(function(index) {
        if (undefined != $(this).attr('style')) {
            if($(this).attr('id'))
                strCustomCss += "#" + $(this).attr('id') + "{" + $(this).attr('style') + "}";
            else if($(this).attr('class')){
                var cxss = "";
                var cmps = configSite.GBL_PROPERTIES.edit_sections;
                for(var i=0; i<cmps.length; i++){
                    var obj = cmps[i];
                    if(obj.cmp=="class"){
                        if( $(this).attr('class').indexOf(obj.val) >= 0){
                            cxss = obj.val;
                        }
                    }
                }

                strCustomCss += "." + cxss + "{" + $(this).attr('style') + "}";
            }
        }
    });

    $('#bcTmpFileContainer').html('');
    $.ajax({
            /* headers: {
						"Access-Control-Allow-Origin": "*",
						"Content-Type": "application/json"
				},*/
            method: "PUT",
            url: endPoint['setStyles'],
            data: JSON.stringify({
                //'id_usuario': configSite.id_usuario,
                'id_sitio': configSite.id_sitio,
                'css': strCustomCss
            }),
            contentType: "application/json",
            dataType: "json",
            crossDomain: true
        })
        .done(function(response) {
            //console.log(' peticion servicio setEstilo', response);
            $('.saver').removeClass('show');
        }).fail(function(response) {
            console.log(' fail peticion servicio setEstilo', response);
        });
}

function revealTab(path){
    var arrPath = path.split(',');
    for (item in arrPath){
        $('a[data-target="#'+arrPath[item]+'"]').tab('show');
    }

    //pull to right customizer sidebar
    $('#bcCustomContentSidebar .handler').data('expanded', true);
    $('#bcCustomContentSidebar .handler').attr('title','Ocultar personalizador de página');
    $('body').removeClass('pullToHide').addClass('pullToShow').animate({left: '500px'});
    $('#bcCustomContentSidebar .handler').html('<img src="assets/img/customize_icon_hide.svg">');
}

function shadeColor(color, percent) {

    var R = parseInt(color.substring(1, 3), 16);
    var G = parseInt(color.substring(3, 5), 16);
    var B = parseInt(color.substring(5, 7), 16);

    R = parseInt(R * (100 + percent) / 100);
    G = parseInt(G * (100 + percent) / 100);
    B = parseInt(B * (100 + percent) / 100);

    R = (R < 255) ? R : 255;
    G = (G < 255) ? G : 255;
    B = (B < 255) ? B : 255;

    var RR = ((R.toString(16).length == 1) ? "0" + R.toString(16) : R.toString(16));
    var GG = ((G.toString(16).length == 1) ? "0" + G.toString(16) : G.toString(16));
    var BB = ((B.toString(16).length == 1) ? "0" + B.toString(16) : B.toString(16));

    return "#" + RR + GG + BB;
}


function humanFileSize(size) {
    var i = Math.floor( Math.log(size) / Math.log(1024) );
    return ( size / Math.pow(1024, i) ).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];
};
